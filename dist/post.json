{
  "Attribute": {
    "add": {
      "description": "POST a MISP Attribute JSON to this API to create an Attribute.",
      "mandatory": ["value", "type"],
      "optional": [
        "category",
        "to_ids",
        "uuid",
        "distribution",
        "sharing_group_id",
        "timestamp",
        "comment",
        "data",
        "encrypt",
        "first_seen",
        "last_seen"
      ],
      "params": ["event_id"]
    },
    "edit": {
      "description": "POST a MISP Attribute JSON to this API to update an Attribute. If the timestamp is set, it has to be newer than the existing Attribute.",
      "mandatory": [],
      "optional": [
        "value",
        "type",
        "category",
        "to_ids",
        "uuid",
        "distribution",
        "sharing_group_id",
        "timestamp",
        "comment",
        "date",
        "encrypt",
        "first_seen",
        "last_seen"
      ],
      "params": ["attribute_id"]
    },
    "deleteSelected": {
      "description": "POST a list of attribute IDs in JSON format to this API to delete the given attributes. This API also expects an event ID passed via the URL or via the event_id key. The id key also takes 'all' as a parameter for a wildcard search to mass delete attributes. If you want the function to also hard-delete already soft-deleted attributes, pass the allow_hard_delete key.",
      "mandatory": ["id"],
      "optional": ["event_id", "allow_hard_delete"],
      "params": ["event_id"]
    },
    "restSearch": {
      "description": "Search MISP using a list of filter parameters and return the data in the selected format. The search is available on an event and an attribute level, just select the scope via the URL (/events/restSearch vs /attributes/restSearch). Besides the parameters listed, other, format specific ones can be passed along (for example: requested_attributes and includeContext for the CSV export). This API allows pagination via the page and limit parameters.",
      "mandatory": ["returnFormat"],
      "optional": [
        "page",
        "limit",
        "value",
        "type",
        "category",
        "org",
        "tags",
        "date",
        "last",
        "eventid",
        "withAttachments",
        "uuid",
        "publish_timestamp",
        "timestamp",
        "attribute_timestamp",
        "enforceWarninglist",
        "to_ids",
        "deleted",
        "includeEventUuid",
        "includeEventTags",
        "event_timestamp",
        "threat_level_id",
        "eventinfo",
        "sharinggroup",
        "includeProposals",
        "includeDecayScore",
        "includeFullModel",
        "decayingModel",
        "excludeDecayed",
        "score",
        "first_seen",
        "last_seen"
      ],
      "params": []
    },
    "addTag": {
      "description": "Add a tag or a tag collection to an attribute.",
      "mandatory": ["attribute", "tag"]
    },
    "removeTag": {
      "description": "Remove a tag from an attribute.",
      "mandatory": ["attribute", "tag"]
    }
  },
  "Community": {
    "requestAccess": {
      "description": "POST a request object describing yourself and your organisation to request access to the desired community.",
      "mandatory": [],
      "optional": [
        "org_name",
        "org_uuid",
        "sync",
        "org_description",
        "email",
        "message",
        "anonymise",
        "gpgkey",
        "mock"
      ],
      "params": ["uuid"]
    }
  },
  "Event": {
    "add": {
      "description": "POST a MISP Event JSON to this API to create an Event. Contained objects can also be included (such as attributes, objects, tags, etc).",
      "mandatory": ["info"],
      "optional": [
        "threat_level_id",
        "analysis",
        "distribution",
        "sharing_group_id",
        "uuid",
        "published",
        "timestamp",
        "date",
        "Attribute",
        "Object",
        "Shadow_Attribute",
        "EventTag"
      ],
      "params": []
    },
    "edit": {
      "description": "POST a MISP Event JSON to this API to update an Event. Contained objects can also be included (such as attributes, objects, tags, etc). If the timestamp is set, it has to be newer than the existing Attribute.",
      "mandatory": [],
      "optional": [
        "info",
        "threat_level_id",
        "analysis",
        "distribution",
        "sharing_group_id",
        "uuid",
        "published",
        "timestamp",
        "date",
        "Attribute",
        "Object",
        "Shadow_Attribute",
        "EventTag"
      ],
      "params": ["event_id"]
    },
    "index": {
      "description": "POST a JSON filter object to this API to get the meta-data about matching events.",
      "optional": [
        "all",
        "attribute",
        "published",
        "eventid",
        "datefrom",
        "dateuntil",
        "org",
        "eventinfo",
        "tag",
        "tags",
        "distribution",
        "sharinggroup",
        "analysis",
        "threatlevel",
        "email",
        "hasproposal",
        "timestamp",
        "publishtimestamp",
        "publish_timestamp",
        "minimal"
      ]
    },
    "restSearch": {
      "description": "Search MISP using a list of filter parameters and return the data in the selected format. The search is available on an event and an attribute level, just select the scope via the URL (/events/restSearch vs /attributes/restSearch). Besides the parameters listed, other, format specific ones can be passed along (for example: requested_attributes and includeContext for the CSV export). This API allows pagination via the page and limit parameters.",
      "mandatory": ["returnFormat"],
      "optional": [
        "page",
        "limit",
        "value",
        "type",
        "category",
        "org",
        "tag",
        "tags",
        "event_tags",
        "searchall",
        "date",
        "last",
        "eventid",
        "withAttachments",
        "metadata",
        "uuid",
        "published",
        "publish_timestamp",
        "timestamp",
        "enforceWarninglist",
        "sgReferenceOnly",
        "eventinfo",
        "sharinggroup",
        "excludeLocalTags",
        "threat_level_id"
      ],
      "params": []
    },
    "addTag": {
      "description": "Add a tag or a tag collection to an event.",
      "mandatory": ["event", "tag"]
    },
    "removeTag": {
      "description": "Remove a tag from an event.",
      "mandatory": ["event", "tag"]
    }
  },
  "EventGraph": {
    "add": {
      "description": "POST a network in JSON format to this API to to keep an history of it",
      "mandatory": ["event_id", "network_json"],
      "optional": ["network_name"]
    }
  },
  "EventReport": {
    "add": {
      "description": "POST a report in JSON format to create a report for the provided event",
      "mandatory": ["name"],
      "optional": ["distribution", "content"]
    },
    "edit": {
      "description": "POST a report in JSON format to update the report",
      "mandatory": [],
      "optional": ["name", "distribution", "content"]
    }
  },
  "Feed": {
    "add": {
      "description": "POST a MISP Feed descriptor JSON to this API to add a Feed.",
      "mandatory": ["source_format", "url", "name", "input_source", "provider"],
      "optional": [
        "enabled",
        "caching_enabled",
        "lookup_visible",
        "delete_local_file",
        "headers",
        "fixed_event",
        "target_event",
        "settings",
        "publish",
        "override_ids",
        "delta_merge",
        "distribution",
        "sharing_group_id",
        "tag_id",
        "pull_rules",
        "rules",
        "event_id"
      ],
      "params": []
    },
    "edit": {
      "description": "POST a MISP Feed descriptor JSON to this API to edit a Feed.",
      "mandatory": [],
      "optional": [
        "source_format",
        "url",
        "name",
        "enabled",
        "caching_enabled",
        "lookup_visible",
        "provider",
        "input_source",
        "delete_local_file",
        "headers",
        "fixed_event",
        "target_event",
        "settings",
        "publish",
        "override_ids",
        "delta_merge",
        "distribution",
        "sharing_group_id",
        "tag_id",
        "pull_rules",
        "rules",
        "event_id"
      ],
      "params": ["feed_id"]
    },
    "previewIndex": {
      "description": "Sending a GET request to this endpoint will show the parsed feed in JSON format.",
      "mandatory": [],
      "optional": [],
      "params": ["feed_id"],
      "http_method": "GET"
    }
  },
  "GalaxyCluster": {
    "add": {
      "description": "POST a MISP GalaxyCluster JSON to this API to create a GalaxyCluster. Contained objects can also be included (such as relations, elements, tags, etc).",
      "mandatory": ["value", "description"],
      "optional": [
        "distribution",
        "sharing_group_id",
        "uuid",
        "version",
        "extends_uuid",
        "extends_version",
        "elements",
        "GalaxyClusterRelation"
      ],
      "params": ["galaxy_id"]
    },
    "edit": {
      "description": "POST a MISP GalaxyCluster JSON to this API to edit a GalaxyCluster",
      "mandatory": ["value", "description"],
      "optional": [
        "distribution",
        "sharing_group_id",
        "uuid",
        "version",
        "extends_uuid",
        "extends_version",
        "elements"
      ],
      "params": ["cluster_id"]
    },
    "restSearch": {
      "description": "Search MISP using a list of filter parameters and return the data in the selected format. This API allows pagination via the page and limit parameters.",
      "optional": [
        "page",
        "limit",
        "id",
        "uuid",
        "galaxy_id",
        "galaxy_uuid",
        "version",
        "distribution",
        "org_id",
        "orgc_id",
        "tag_name",
        "custom",
        "minimal",
        "published",
        "value",
        "elements",
        "extends_uuid"
      ],
      "params": []
    }
  },
  "GalaxyClusterRelation": {
    "add": {
      "description": "POST a MISP GalaxyClusterRelation JSON to this API to create a GalaxyCluster relation. Contained objects can also be included (such as tags).",
      "mandatory": [
        "galaxy_cluster_uuid",
        "referenced_galaxy_cluster_uuid",
        "referenced_galaxy_cluster_type"
      ],
      "optional": ["distribution", "sharing_group_id", "tags"],
      "params": []
    },
    "edit": {
      "description": "POST a MISP GalaxyClusterRelation JSON to this API to edit a GalaxyCluster relation. Contained objects can also be included (such as tags).",
      "mandatory": [
        "galaxy_cluster_uuid",
        "referenced_galaxy_cluster_uuid",
        "referenced_galaxy_cluster_type"
      ],
      "optional": ["distribution", "sharing_group_id", "tags"],
      "params": ["relation_id"]
    }
  },
  "Log": {
    "admin_index": {
      "description": "POST a filter object to receive a JSON with the log entries matching the query. A simple get request will return the entire DB. You can use the filter parameters as url parameters with a GET request such as: https://path.to.my.misp/admin/logs/page:1/limit:200 - to run substring queries simply append/prepend/encapsulate the search term with %. All restSearch rules apply.",
      "optional": [
        "id",
        "title",
        "created",
        "model",
        "model_id",
        "action",
        "user_id",
        "change",
        "email",
        "org",
        "description",
        "ip"
      ]
    },
    "event_index": {
      "description": "Simply run a get request on this endpoint to get the relevant log entries for a given event. This functionality is open to any user having access to a given event."
    }
  },
  "Organisation": {
    "admin_add": {
      "description": "POST an Organisation object in JSON format to this API to create a new organsiation.",
      "mandatory": ["name"],
      "optional": [
        "description",
        "type",
        "nationality",
        "sector",
        "uuid",
        "contacts",
        "local"
      ]
    },
    "admin_edit": {
      "description": "POST an Organisation object in JSON format to this API to create a new organsiation.",
      "mandatory": ["name"],
      "optional": [
        "description",
        "type",
        "nationality",
        "sector",
        "uuid",
        "contacts",
        "local"
      ]
    }
  },
  "Role": {
    "admin_add": {
      "description": "POST a Role object in JSON format to this API to create a new role. 'permission' sets the data access permission (0 => read only, 1 => add/edit own, 2 => add/edit org, 3 => publish)",
      "mandatory": ["name"],
      "optional": [
        "perm_delegate",
        "perm_sync",
        "perm_admin",
        "perm_audit",
        "perm_auth",
        "perm_site_admin",
        "perm_regexp_access",
        "perm_tagger",
        "perm_galaxy_editor",
        "perm_template",
        "perm_sharing_group",
        "perm_tag_editor",
        "default_role",
        "perm_sighting",
        "permission"
      ]
    },
    "admin_edit": {
      "description": "POST a Role object in JSON format to this API to edit a role. 'permission' sets the data access permission (0 => read only, 1 => add/edit own, 2 => add/edit org, 3 => publish)",
      "mandatory": ["name"],
      "optional": [
        "perm_delegate",
        "perm_sync",
        "perm_admin",
        "perm_audit",
        "perm_auth",
        "perm_site_admin",
        "perm_regexp_access",
        "perm_tagger",
        "perm_galaxy_editor",
        "perm_template",
        "perm_sharing_group",
        "perm_tag_editor",
        "default_role",
        "perm_sighting",
        "permission"
      ]
    }
  },
  "Server": {
    "add": {
      "description": "POST an Server object in JSON format to this API to add a server.",
      "mandatory": ["url", "name", "remote_org_id", "authkey"],
      "optional": [
        "push",
        "pull",
        "push_sightings",
        "push_rules",
        "pull_rules",
        "submitted_cert",
        "submitted_client_cert",
        "json"
      ]
    },
    "edit": {
      "description": "POST an Server object in JSON format to this API to edit a server.",
      "optional": [
        "url",
        "name",
        "authkey",
        "json",
        "push",
        "pull",
        "push_sightings",
        "push_rules",
        "pull_rules",
        "submitted_cert",
        "submitted_client_cert",
        "remote_org_id"
      ]
    },
    "serverSettings": {
      "description": "Send a GET request to this endpoint to get a full diagnostic along with all currently set settings of the current instance. This will also include the worker status"
    }
  },
  "Sighting": {
    "restSearch": {
      "description": "Search MISP sightings using a list of filter parameters and return the data in the JSON format. The search is available on an event, attribute or instance level, just select the scope via the URL (/sighting/restSearch/event vs /sighting/restSearch/attribute vs /sighting/restSearch/). id or uuid MUST be provided if context is set.",
      "mandatory": ["returnFormat"],
      "optional": [
        "id",
        "uuid",
        "type",
        "from",
        "to",
        "last",
        "org_id",
        "source",
        "includeAttribute",
        "includeEvent",
        "includeUuid"
      ],
      "params": ["context"]
    }
  },
  "SharingGroup": {
    "add": {
      "description": "POST a Sharing Group object in JSON format to this API to add a Sharing Group. The API will also try to capture attached organisations and servers if applicable to the current user.",
      "mandatory": ["name", "releasability"],
      "optional": [
        "description",
        "uuid",
        "organisation_uuid",
        "active",
        "created",
        "modified",
        "roaming"
      ]
    },
    "edit": {
      "description": "POST a Sharing Group object in JSON format to this API to edit a Sharing Group. The API will also try to capture attached organisations and servers if applicable to the current user.",
      "mandatory": [],
      "optional": [
        "name",
        "releasability",
        "description",
        "uuid",
        "organisation_uuid",
        "active",
        "created",
        "modified",
        "roaming"
      ]
    }
  },
  "Tag": {
    "add": {
      "description": "POST a Tag object in JSON format to this API to create a new tag.",
      "mandatory": ["name"],
      "optional": ["colour", "exportable", "hide_tag", "org_id", "user_id"]
    },
    "edit": {
      "description": "POST or PUT a Tag object in JSON format to this API to create a edit an existing tag.",
      "optional": [
        "name",
        "colour",
        "exportable",
        "hide_tag",
        "org_id",
        "user_id"
      ],
      "params": ["tag_id"]
    },
    "removeTagFromObject": {
      "description": "Untag an event or attribute. Tag can be the id or the name.",
      "mandatory": ["uuid", "tag"]
    },
    "attachTagToObject": {
      "description": "Attach a Tag to an object, refenced by an UUID. Tag can either be a tag id or a tag name.",
      "mandatory": ["uuid", "tag"]
    },
    "search": {
      "description": "GET or POST the tags to search for as a raw string or as a list. The strict_tag_name_only parameter only returns tags matching exactly the tag name (thus, skipping synonyms and cluster's value)",
      "params": ["tag_name", "strict_tag_name_only"]
    }
  },
  "User": {
    "admin_add": {
      "description": "POST a User object in JSON format to this API to create a new user.",
      "mandatory": ["email", "org_id", "role_id"],
      "optional": [
        "password",
        "external_auth_required",
        "external_auth_key",
        "enable_password",
        "nids_sid",
        "server_id",
        "gpgkey",
        "certif_public",
        "autoalert",
        "contactalert",
        "disabled",
        "change_pw",
        "termsaccepted",
        "newsread"
      ]
    },
    "admin_edit": {
      "description": "POST a User object in JSON format to this API to edit a user.",
      "optional": [
        "email",
        "org_id",
        "role_id",
        "password",
        "external_auth_required",
        "external_auth_key",
        "enable_password",
        "nids_sid",
        "server_id",
        "gpgkey",
        "certif_public",
        "autoalert",
        "contactalert",
        "disabled",
        "change_pw",
        "termsaccepted",
        "newsread"
      ]
    },
    "admin_quickEmail": {
      "description": "POST a body and a subject in a JSON to send an e-mail through MISP to the user ID given in the URL",
      "mandatory": ["subject", "body"]
    },
    "change_pw": {
      "description": "POST a password via a JSON object containing the password key to reset the given user's password.",
      "mandatory": ["password"]
    },
    "statistics": {
      "description": "Simply GET the url endpoint to view the API output of the statistics API. Additional statistics are available via the following tab-options similar to the UI: data, orgs, users, tags, attributehistogram, sightings, attackMatrix",
      "params": ["tab"],
      "http_method": "GET"
    },
    "totp_delete": {
      "description": "Simply do a DELETE or POST request to the url",
      "params": ["user_id"],
      "http_method": "DELETE"
    }
  },
  "UserSetting": {
    "setSetting": {
      "description": "POST a User setting object in JSON format to this API to create a new setting or update the equivalent existing setting. Admins/site admins can specify a user ID besides their own.",
      "mandatory": ["setting", "value"],
      "optional": ["user_id"]
    },
    "delete": {
      "description": "POST or DELETE to this API to delete an existing setting.",
      "params": ["id"]
    }
  },
  "Warninglist": {
    "checkValue": {
      "description": "POST a JSON list with value(s) to check against the warninglists to get a JSON dictionary as a response with any hits, if there are any (with the key being the passed value triggering a warning).",
      "mandatory": ["[]"]
    },
    "toggleEnable": {
      "description": "POST a json object with a single or a list of warninglist IDsIDs, or alternatively a (list of) substring(s) that match the names of warninglist(s) to toggle whether they're enabled or disabled. Specify the optional enabled boolean flag if you would like to enforce the outcome state. Not setting this flag will just toggle the current state.",
      "mandatory": ["id"],
      "optional": ["id", "name", "enabled"]
    }
  }
}
